services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules # Prevent overwriting node_modules
    command: npm start
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    ports:
      - "6000:6000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - pgadmin


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5555:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge
